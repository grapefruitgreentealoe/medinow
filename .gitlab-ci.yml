stages:
  - install
  - lint
  - test
  - build
  - docker-build
  - deploy

variables:
  NODE_ENV: production
  PNPM_HOME: /root/.pnpm
  DOCKER_DRIVER: overlay2
  DOCKER_IMAGE_FRONTEND: grapefruitgreentealoe/medinow-frontend
  DOCKER_IMAGE_BACKEND: grapefruitgreentealoe/medinow-backend

default:
  image: node:20

before_script:
  - corepack enable
  - corepack prepare pnpm@latest --activate
  - pnpm install

install:
  stage: install
  script:
    - echo "pnpm install already done in before_script"

lint:
  stage: lint
  script:
    - pnpm lint

test:
  stage: test
  script:
    - pnpm test

build-frontend:
  stage: build
  script:
    - pnpm build --filter=frontend...
  only:
    - dev

build-backend:
  stage: build
  script:
    - pnpm build --filter=backend...
  only:
    - dev

docker-build-frontend:
  stage: docker-build
  image: docker:20
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    - docker build --platform=linux/amd64 -f apps/frontend/Dockerfile -t $DOCKER_IMAGE_FRONTEND:dev .
    - docker tag $DOCKER_IMAGE_FRONTEND:dev $DOCKER_IMAGE_FRONTEND:dev-$CI_COMMIT_SHORT_SHA
    - docker push $DOCKER_IMAGE_FRONTEND:dev
    - docker push $DOCKER_IMAGE_FRONTEND:dev-$CI_COMMIT_SHORT_SHA
  only:
    - dev

# docker-build-backend:
#   stage: docker-build
#   image: docker:20
#   before_script:
#     - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
#   script:
#     - docker build --platform=linux/amd64 -f apps/backend/Dockerfile -t $DOCKER_IMAGE_BACKEND:dev .
#     - docker tag $DOCKER_IMAGE_BACKEND:dev $DOCKER_IMAGE_BACKEND:dev-$CI_COMMIT_SHORT_SHA
#     - docker push $DOCKER_IMAGE_BACKEND:dev
#     - docker push $DOCKER_IMAGE_BACKEND:dev-$CI_COMMIT_SHORT_SHA
#   only:
#     - dev

deploy-frontend:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts
  script:
    - scp scripts/deploy-frontend-dev.sh $DEPLOY_USER@$DEPLOY_HOST:~/deploy-frontend.sh
    - ssh $DEPLOY_USER@$DEPLOY_HOST "chmod +x ~/deploy-frontend.sh && ~/deploy-frontend.sh"
  only:
    - dev
# deploy-backend:
#   stage: deploy
#   image: alpine:latest
#   before_script:
#     - apk add --no-cache openssh-client
#     - mkdir -p ~/.ssh
#     - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
#     - chmod 700 ~/.ssh
#     - ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts
#   script:
#     - scp scripts/deploy-backend-dev.sh $DEPLOY_USER@$DEPLOY_HOST:~/deploy-backend.sh
#     - ssh $DEPLOY_USER@$DEPLOY_HOST "chmod +x ~/deploy-backend.sh && ~/deploy-backend.sh"
#   only:
#     - dev
