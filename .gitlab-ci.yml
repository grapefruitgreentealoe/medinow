# stages:
#   - install
#   - lint
#   - test
#   - build
#   - docker-build
#   - deploy

# variables:
#   NODE_ENV: production
#   PNPM_HOME: /root/.pnpm
#   DOCKER_DRIVER: overlay2
#   DOCKER_IMAGE_FRONTEND: grapefruitgreentealoe/medinow-frontend
#   DOCKER_IMAGE_BACKEND: grapefruitgreentealoe/medinow-backend

# default:
#   image: node:20

# before_script:
#   - corepack enable
#   - corepack prepare pnpm@latest --activate
#   - pnpm install

# install:
#   stage: install
#   script:
#     - echo "pnpm install already done in before_script"

# lint:
#   stage: lint
#   script:
#     - pnpm lint

# test:
#   stage: test
#   script:
#     - pnpm test

# build-frontend:
#   stage: build
#   script:
#     - pnpm build --filter=frontend...
#   only:
#     - dev

# build-backend:
#   stage: build
#   script:
#     - pnpm build --filter=backend...
#   only:
#     - dev

docker-build-frontend:
  stage: docker-build
  image: node:20
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    - docker build --platform=linux/amd64 -f apps/frontend/Dockerfile -t $DOCKER_IMAGE_FRONTEND:dev .
    - docker tag $DOCKER_IMAGE_FRONTEND:dev $DOCKER_IMAGE_FRONTEND:dev-$CI_COMMIT_SHORT_SHA
    - docker push $DOCKER_IMAGE_FRONTEND:dev
    - docker push $DOCKER_IMAGE_FRONTEND:dev-$CI_COMMIT_SHORT_SHA
  only:
    - dev

docker-build-backend:
  stage: docker-build
  image: node:20
  before_script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    - docker build --platform=linux/amd64 -f apps/backend/Dockerfile -t $DOCKER_IMAGE_BACKEND:dev .
    - docker tag $DOCKER_IMAGE_BACKEND:dev $DOCKER_IMAGE_BACKEND:dev-$CI_COMMIT_SHORT_SHA
    - docker push $DOCKER_IMAGE_BACKEND:dev
    - docker push $DOCKER_IMAGE_BACKEND:dev-$CI_COMMIT_SHORT_SHA
  only:
    - dev

deploy-frontend:
  stage: deploy
  image: node:20
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-add ~/.ssh/id_rsa
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts

  script:
    - scp scripts/deploy-frontend-dev.sh $DEPLOY_USER@$DEPLOY_HOST:~/scripts/deploy-frontend-dev.sh
    - ssh $DEPLOY_USER@$DEPLOY_HOST "chmod +x ~/scripts/deploy-frontend-dev.sh && ~/scripts/deploy-frontend-dev.sh"

  only:
    - dev

deploy-backend:
  stage: deploy
  image: node:20
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-add ~/.ssh/id_rsa
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts
  script:
    - scp scripts/deploy-backend-dev.sh $DEPLOY_USER@$DEPLOY_HOST:~/scripts/deploy-backend-dev.sh
    - ssh $DEPLOY_USER@$DEPLOY_HOST "chmod +x ~/scripts/deploy-backend-dev.sh && ~/scripts/deploy-backend-dev.sh"
  only:
    - dev
